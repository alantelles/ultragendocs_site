class ArticleHelpers

function findNextArticle(now) : ArticleHelpers
    toc = $request[:context][:tocs][:docs]
    next = toc.length()
    for (toc, entry)
        if ((entry[:slug]) == now)
            next = _entry + 1
            break
        end
    end
    if (next == (toc.length()))
        return false
    end
    return toc[next]
end

function findPreviousArticle(now) : ArticleHelpers    
    toc = $request[:context][:tocs][:docs]
    next = -1
    for (toc, entry)
        if ((entry[:slug]) == now)
            next = _entry - 1
            break
        end
    end
    if (next == -1)
        return false
    end
    return toc[next]
end

function articleNotFound(response) : ArticleHelpers
    if ((response.endsWith('404')))
        return true
    end
    return false
end

function processTables(parsed) : ArticleHelpers
    rep = parsed.replace('<table>', '<div class="table-responsive my-4"><table class="table table-striped">')
    rep = rep.replace('</table>', '</table></div>')
    rep = rep.replace('<th>', '<th class="theme-bg-dark" style="color: #efefef">')
    return rep
end

function getCategory(line) : ArticleHelpers
    pos = line.lastIndexOf(':')
    cat = line.slice(pos + 1)
    cut = line.slice(0, pos)
    return [cut, cat]
end

function htmlize(str, tag) : ArticleHelpers
    str = str.replace('[' + tag + ']', '<' + tag + '>')
    str = str.replace('[/' + tag + ']', '</' + tag + '>')
    return str
end

function processPermalinks(parsed) : ArticleHelpers
    stExp = '<blockquote>\n<p>'
    stExpLen = stExp.length()
    endExp = '</p>\n</blockquote>'
    endExpLen = endExp.length()
    posSt = parsed.indexOf(stExp)
    part = ''
    output = ''
    while (posSt > -1)
        posEnd = parsed.indexOf(endExp)
        part = parsed.slice(posSt + stExpLen, posEnd)
        # part is the text
        output += parsed.slice(0, posSt)
        output += '<blockquote id="' + part + '">\n<p>'
        output += part
        output += endExp
        parsed = parsed.slice(posEnd + endExpLen)
        posSt = parsed.indexOf(stExp)
    end
    output += parsed
    return output
end

function processCallOuts(parsed) : ArticleHelpers

    include 'app/templates/components/callout.ultra.html'

    stExp = '<pre><code class="language-callout">'
    stExpLen = stExp.length()
    endExp = 'callout\n</code></pre>'
    endExpLen = endExp.length()
    posSt = parsed.indexOf(stExp)
    part = ''
    output = ''
    while (posSt > -1)
        posEnd = parsed.indexOf(endExp)
        part = parsed.slice(posSt + stExpLen, posEnd - 1)
        output += parsed.slice(0, posSt)
        callout = CallOut(*ArticleHelpers.getCategory(part))
        callout = ArticleHelpers.htmlize(callout, 'code')
        callout = ArticleHelpers.htmlize(callout, 'b')
        output += callout
        part = part.slice(0, part.lastIndexOf(':'))
        parsed = parsed.slice(posEnd + endExpLen)
        posSt = parsed.indexOf(stExp)
    end
    output += parsed
    return output
end